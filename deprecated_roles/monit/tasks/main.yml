---
# tasks file for monit

- name: Install monit package
  apt:
    pkg: "{{monit_package}}"
    state: present

- name : Check monit backup file exists
  stat:
    path: "{{ monit_config_file }}.backup"
  register: monit_config_backup_file

- name : Create monit backup file if not exists
  copy:
    src: "{{ monit_config_file }}"
    dest: "{{ monit_config_file }}.backup"
    owner: root
    group: root
    mode: 0600
    remote_src: yes
  when: not monit_config_backup_file.stat.exists

- name: Copy configuration file
  template:
    src: monit.conf.j2
    dest: "{{ monit_config_file }}"
    owner: root
    group: root
    mode: 0600

- name: Copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "apache.conf.j2", dest: "{{ monit_apache_config_file }}", enabled: "{{ monit_apache_enabled }}" }
    - { src: "postgresql.conf.j2", dest: "{{ monit_postgres_config_file }}", enabled: "{{ monit_postgres_enabled }}" }
    - { src: "proftpd.conf.j2", dest: "{{ monit_proftp_config_file }}", enabled: "{{ monit_proftp_enabled }}" }
    - { src: "sshd.conf.j2", dest: "{{ monit_sshd_config_file }}", enabled: "{{ monit_sshd_enabled }}" }
    - { src: "tomcat.conf.j2", dest: "{{ monit_tomcat_config_file }}", enabled: "{{ monit_tomcat_enabled }}" }
  when: "{{ item.enabled }}"

- name : Iptables rules
  include: iptables.yml
  when: monit_admin_dashboard_enabled and monit_iptables_enabled

- name: Reload monit
  command: echo "Reload monit"
  notify:
    - Reload monit

#https://docs.ansible.com/ansible/meta_module.html
- meta: flush_handlers

- name: Test with goss
  include: goss.yml
  when: monit_goss_enabled